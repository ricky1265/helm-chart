apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    release: "{{ .Chart.Name }}"
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: "{{ .Chart.Name }}"
    spec:
      restartPolicy: Always
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}/{{ .Chart.Name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}
          env:
            - name: DB_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: DB_AUTH_PASSWORD
            - name: DB_AUTH_PASSWORD_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ .Chart.Name }}
                  key: DB_AUTH_PASSWORD_SEED
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds:
            timeoutSeconds: 10
            failureThreshold: 5
          securityContext:
            allowPrivilegeEscalation: false
